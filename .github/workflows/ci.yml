name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: development
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: test-secret
      JWT_SECRET: test-secret
      API_JWT_SECRET: test-secret
      NEXT_PUBLIC_API_URL: http://localhost:4000
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/contentguard?schema=public
      REDIS_URL: redis://localhost:6379
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: contentguard
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Install deps
        run: pnpm install --no-frozen-lockfile

      - name: Generate Prisma client
        run: pnpm -C apps/api prisma:generate

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Build API
        run: pnpm -C apps/api build

      - name: Build Web
        run: pnpm -C apps/web build

      - name: Install pnpm
        run: npm install -g pnpm

